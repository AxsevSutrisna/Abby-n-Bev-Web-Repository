{"version":3,"sources":["../../../src/drivers/facebook.ts"],"sourcesContent":["/*\n * @adonisjs/ally\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { HttpClient } from '@poppinss/oauth-client'\nimport type { HttpContext } from '@adonisjs/core/http'\nimport type {\n  FacebookToken,\n  FacebookScopes,\n  LiteralStringUnion,\n  ApiRequestContract,\n  FacebookDriverConfig,\n  FacebookProfileFields,\n  RedirectRequestContract,\n} from '../types.js'\nimport { Oauth2Driver } from '../abstract_drivers/oauth2.js'\n\n/**\n * Facebook driver to login user via Facebook\n */\nexport class FacebookDriver extends Oauth2Driver<FacebookToken, FacebookScopes> {\n  protected accessTokenUrl = 'https://graph.facebook.com/v10.0/oauth/access_token'\n  protected authorizeUrl = 'https://www.facebook.com/v10.0/dialog/oauth'\n  protected userInfoUrl = 'https://graph.facebook.com/v10.0/me'\n\n  /**\n   * The default set of fields to query for the user request\n   */\n  protected userFields: LiteralStringUnion<FacebookProfileFields>[] = [\n    'name',\n    'first_name',\n    'last_name',\n    'link',\n    'email',\n    'picture.width(400).height(400)',\n    'verified',\n  ]\n\n  /**\n   * The param name for the authorization code\n   */\n  protected codeParamName = 'code'\n\n  /**\n   * The param name for the error\n   */\n  protected errorParamName = 'error'\n\n  /**\n   * Cookie name for storing the \"facebok_oauth_state\"\n   */\n  protected stateCookieName = 'facebok_oauth_state'\n\n  /**\n   * Parameter name to be used for sending and receiving the state\n   * from Facebok\n   */\n  protected stateParamName = 'state'\n\n  /**\n   * Parameter name for defining the scopes\n   */\n  protected scopeParamName = 'scope'\n\n  /**\n   * Scopes separator\n   */\n  protected scopesSeparator = ' '\n\n  constructor(\n    ctx: HttpContext,\n    public config: FacebookDriverConfig\n  ) {\n    super(ctx, config)\n\n    /**\n     * Extremely important to call the following method to clear the\n     * state set by the redirect request\n     */\n    this.loadState()\n  }\n\n  /**\n   * Configuring the redirect request with defaults\n   */\n  protected configureRedirectRequest(request: RedirectRequestContract<FacebookScopes>) {\n    /**\n     * Define user defined scopes or the default one's\n     */\n    request.scopes(this.config.scopes || ['email'])\n\n    request.param('response_type', 'code')\n    request.param('grant_type', 'authorization_code')\n\n    /**\n     * Define params based upon user config\n     */\n    if (this.config.display) {\n      request.param('display', this.config.display)\n    }\n    if (this.config.authType) {\n      request.param('auth_type', this.config.authType)\n    }\n  }\n\n  /**\n   * Returns the HTTP request with the authorization header set\n   */\n  protected getAuthenticatedRequest(url: string, token: string): HttpClient {\n    const request = this.httpClient(url)\n    request.header('Authorization', `Bearer ${token}`)\n    request.header('Accept', 'application/json')\n    request.parseAs('json')\n    return request\n  }\n\n  /**\n   * Fetches the user info from the Facebook API\n   * https://developers.facebook.com/docs/graph-api/reference/user/\n   */\n  protected async getUserInfo(token: string, callback?: (request: ApiRequestContract) => void) {\n    const request = this.getAuthenticatedRequest(this.config.userInfoUrl || this.userInfoUrl, token)\n    request.param('fields', (this.config.userFields || this.userFields).join(','))\n\n    const body = await request.get()\n\n    /**\n     * Invoke callback if defined\n     */\n    if (typeof callback === 'function') {\n      callback(request)\n    }\n\n    return {\n      id: body.id,\n      name: body.name,\n      nickName: body.name,\n      // https://developers.facebook.com/docs/graph-api/reference/user/picture/\n      avatarUrl: body.picture?.data?.url || null,\n      email: body.email || null, // May not always be there (requires email scope)\n      // Important note: https://developers.facebook.com/docs/facebook-login/multiple-providers#postfb1\n      emailVerificationState:\n        'verified' in body\n          ? body.verified\n            ? ('verified' as const)\n            : ('unverified' as const)\n          : ('unsupported' as const),\n      original: body,\n    }\n  }\n\n  /**\n   * Find if the current error code is for access denied\n   */\n  accessDenied(): boolean {\n    const error = this.getError()\n    if (!error) {\n      return false\n    }\n\n    return error === 'access_denied'\n  }\n\n  /**\n   * Returns details for the authorized user\n   */\n  async user(callback?: (request: ApiRequestContract) => void) {\n    const token = await this.accessToken(callback)\n    const user = await this.getUserInfo(token.token, callback)\n\n    return {\n      ...user,\n      token,\n    }\n  }\n\n  /**\n   * Finds the user by the access token\n   */\n  async userFromToken(token: string, callback?: (request: ApiRequestContract) => void) {\n    const user = await this.getUserInfo(token, callback)\n\n    return {\n      ...user,\n      token: { token, type: 'bearer' as const },\n    }\n  }\n}\n"],"mappings":";;;;;;;AAyBO,IAAM,iBAAN,cAA6B,aAA4C;AAAA,EAiD9E,YACE,KACO,QACP;AACA,UAAM,KAAK,MAAM;AAFV;AAQP,SAAK,UAAU;AAAA,EACjB;AAAA,EA3DU,iBAAiB;AAAA,EACjB,eAAe;AAAA,EACf,cAAc;AAAA;AAAA;AAAA;AAAA,EAKd,aAA0D;AAAA,IAClE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKU,gBAAgB;AAAA;AAAA;AAAA;AAAA,EAKhB,iBAAiB;AAAA;AAAA;AAAA;AAAA,EAKjB,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlB,iBAAiB;AAAA;AAAA;AAAA;AAAA,EAKjB,iBAAiB;AAAA;AAAA;AAAA;AAAA,EAKjB,kBAAkB;AAAA;AAAA;AAAA;AAAA,EAkBlB,yBAAyB,SAAkD;AAInF,YAAQ,OAAO,KAAK,OAAO,UAAU,CAAC,OAAO,CAAC;AAE9C,YAAQ,MAAM,iBAAiB,MAAM;AACrC,YAAQ,MAAM,cAAc,oBAAoB;AAKhD,QAAI,KAAK,OAAO,SAAS;AACvB,cAAQ,MAAM,WAAW,KAAK,OAAO,OAAO;AAAA,IAC9C;AACA,QAAI,KAAK,OAAO,UAAU;AACxB,cAAQ,MAAM,aAAa,KAAK,OAAO,QAAQ;AAAA,IACjD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKU,wBAAwB,KAAa,OAA2B;AACxE,UAAM,UAAU,KAAK,WAAW,GAAG;AACnC,YAAQ,OAAO,iBAAiB,UAAU,KAAK,EAAE;AACjD,YAAQ,OAAO,UAAU,kBAAkB;AAC3C,YAAQ,QAAQ,MAAM;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAgB,YAAY,OAAe,UAAkD;AAC3F,UAAM,UAAU,KAAK,wBAAwB,KAAK,OAAO,eAAe,KAAK,aAAa,KAAK;AAC/F,YAAQ,MAAM,WAAW,KAAK,OAAO,cAAc,KAAK,YAAY,KAAK,GAAG,CAAC;AAE7E,UAAM,OAAO,MAAM,QAAQ,IAAI;AAK/B,QAAI,OAAO,aAAa,YAAY;AAClC,eAAS,OAAO;AAAA,IAClB;AAEA,WAAO;AAAA,MACL,IAAI,KAAK;AAAA,MACT,MAAM,KAAK;AAAA,MACX,UAAU,KAAK;AAAA;AAAA,MAEf,WAAW,KAAK,SAAS,MAAM,OAAO;AAAA,MACtC,OAAO,KAAK,SAAS;AAAA;AAAA;AAAA,MAErB,wBACE,cAAc,OACV,KAAK,WACF,aACA,eACF;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,eAAwB;AACtB,UAAM,QAAQ,KAAK,SAAS;AAC5B,QAAI,CAAC,OAAO;AACV,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,KAAK,UAAkD;AAC3D,UAAM,QAAQ,MAAM,KAAK,YAAY,QAAQ;AAC7C,UAAM,OAAO,MAAM,KAAK,YAAY,MAAM,OAAO,QAAQ;AAEzD,WAAO;AAAA,MACL,GAAG;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,cAAc,OAAe,UAAkD;AACnF,UAAM,OAAO,MAAM,KAAK,YAAY,OAAO,QAAQ;AAEnD,WAAO;AAAA,MACL,GAAG;AAAA,MACH,OAAO,EAAE,OAAO,MAAM,SAAkB;AAAA,IAC1C;AAAA,EACF;AACF;","names":[]}