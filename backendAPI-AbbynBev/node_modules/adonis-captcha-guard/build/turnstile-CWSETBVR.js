import {
  E_CAPTCHA_MISSING_TOKEN
} from "./chunk-NKLW5P6S.js";
import {
  Captcha
} from "./chunk-RSIWGLWZ.js";

// src/captchas/turnstile.ts
import got from "got";
var TurnstileService = class extends Captcha {
  constructor(ctx, config) {
    super(ctx, config);
    this.config = config;
  }
  verifyUrl = "https://challenges.cloudflare.com/turnstile/v0/siteverify";
  tokenParamName = "token";
  async validate() {
    if (!this.hasToken()) {
      throw new E_CAPTCHA_MISSING_TOKEN([this.tokenParamName]);
    }
    const token = this.getToken();
    const body = await got.post(
      this.verifyUrl,
      {
        json: {
          secret: this.config.secret,
          response: token
        }
      }
    ).text();
    const decodeBody = JSON.parse(body);
    return {
      success: Boolean(decodeBody.success),
      challengeTimestamp: decodeBody.challenge_ts,
      hostname: decodeBody.hostname,
      errorCodes: decodeBody["error-codes"],
      action: decodeBody.action,
      cdata: decodeBody.cdata
    };
  }
};
export {
  TurnstileService
};
//# sourceMappingURL=turnstile-CWSETBVR.js.map