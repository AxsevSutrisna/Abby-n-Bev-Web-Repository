{"version":3,"sources":["../stubs/main.ts","../package.json","../configure.ts","../src/define_config.ts"],"sourcesContent":["import { joinToURL } from '@poppinss/utils'\n\nexport const stubsRoot = joinToURL(import.meta.url, 'stubs')\n","{\n  \"name\": \"adonis-captcha-guard\",\n  \"version\": \"1.0.1\",\n  \"description\": \"AdonisJS v6 captcha addon\",\n  \"main\": \"build/index.js\",\n  \"engines\": {\n    \"node\": \">=20.6.0\"\n  },\n  \"type\": \"module\",\n  \"files\": [\n    \"build\"\n  ],\n  \"exports\": {\n    \".\": \"./build/index.js\",\n    \"./types\": \"./build/src/types.js\",\n    \"./providers/captcha_provider\": \"./build/providers/captcha_provider.js\"\n  },\n  \"scripts\": {\n    \"build\": \"npm run compile\",\n    \"compile\": \"tsup-node && tsc --emitDeclarationOnly --declaration\",\n    \"postcompile\": \"npm run copy:templates\",\n    \"dev\": \"tsup-node --watch --onSuccess 'tsc -d && npm run postcompile'\",\n    \"test\": \"node --loader ts-node/esm --enable-source-maps bin/test.ts\",\n    \"copy:templates\": \"copyfiles \\\"stubs/**/**/*.stub\\\" build\"\n  },\n  \"keywords\": [\n    \"adonisjs\",\n    \"adonis6\",\n    \"captcha\",\n    \"cloudflare\",\n    \"turnstile\",\n    \"recaptcha\"\n  ],\n  \"author\": \"monojson\",\n  \"license\": \"MIT\",\n  \"homepage\": \"https://github.com/monojson/adonis-captcha-guard\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/monojson/adonis-captcha-guard.git\"\n  },\n  \"devDependencies\": {\n    \"@adonisjs/assembler\": \"^7.2.3\",\n    \"@adonisjs/core\": \"^6.3.1\",\n    \"@adonisjs/eslint-config\": \"^1.3.0\",\n    \"@adonisjs/prettier-config\": \"^1.3.0\",\n    \"@adonisjs/tsconfig\": \"^1.3.0\",\n    \"@japa/assert\": \"^2.1.0\",\n    \"@japa/expect-type\": \"^2.0.1\",\n    \"@japa/file-system\": \"^2.1.1\",\n    \"@japa/runner\": \"^3.1.1\",\n    \"@swc/core\": \"^1.4.6\",\n    \"@types/node\": \"^20.11.25\",\n    \"copyfiles\": \"^2.4.1\",\n    \"eslint\": \"^8.57.0\",\n    \"prettier\": \"^3.2.5\",\n    \"ts-node\": \"^10.9.2\",\n    \"tsup\": \"^8.0.2\",\n    \"typescript\": \"^5.4.2\"\n  },\n  \"peerDependencies\": {\n    \"@adonisjs/core\": \"^6.2.0\"\n  },\n  \"tsup\": {\n    \"entry\": [\n      \"./index.ts\",\n      \"./src/types.ts\",\n      \"./providers/captcha_provider.ts\"\n    ],\n    \"outDir\": \"./build\",\n    \"clean\": true,\n    \"format\": \"esm\",\n    \"dts\": false,\n    \"sourcemap\": true,\n    \"target\": \"esnext\"\n  },\n  \"dependencies\": {\n    \"got\": \"^14.2.1\",\n    \"@poppinss/utils\": \"^6.7.3\"\n  }\n}\n","import ConfigureCommand from '@adonisjs/core/commands/configure'\nimport { stubsRoot } from './stubs/main.js'\nimport pkg from './package.json'\nconst packageName = pkg.name\n\nexport async function configure(command: ConfigureCommand) {\n    const codemods = await command.createCodemods()\n\n    const providers = ['turnstile', 'recaptcha']\n    await codemods.makeUsingStub(stubsRoot, 'config/captcha.stub', {\n        providers: providers.map((provider) => {\n            return { provider, envPrefix: provider.toUpperCase() }\n        }),\n    })\n\n    await codemods.updateRcFile((rcFile) => {\n        rcFile.addProvider(`${packageName}/providers/captcha_provider`)\n    })\n\n    await codemods.defineEnvVariables(\n        providers.reduce<Record<string, string>>((result, provider) => {\n            result[`${provider.toUpperCase()}_SITE_KEY`] = ''\n            result[`${provider.toUpperCase()}_SECRET`] = ''\n            return result\n        }, {})\n    )\n\n    await codemods.defineEnvValidations({\n        variables: providers.reduce<Record<string, string>>((result, provider) => {\n            result[`${provider.toUpperCase()}_SITE_KEY`] = 'Env.schema.string.optional()'\n            result[`${provider.toUpperCase()}_SECRET`] = 'Env.schema.string.optional()'\n            return result\n        }, {})\n    })\n}\n","import { configProvider } from '@adonisjs/core'\nimport type { HttpContext } from '@adonisjs/core/http'\nimport type { ConfigProvider } from '@adonisjs/core/types'\nimport { CaptchaManagerFactory, RecaptchaConfig, TurnstileConfig } from './types.js'\nimport { TurnstileService } from './captchas/turnstile.js'\nimport { RecaptchaService } from './captchas/recaptcha.js'\n\n/**\n * Shape of config after it has been resolved from\n * the config provider\n */\ntype ResolvedConfig<\nCaptchaProviders extends Record<\n    string,\n    CaptchaManagerFactory | ConfigProvider<CaptchaManagerFactory>\n  >,\n> = {\n  [K in keyof CaptchaProviders]: CaptchaProviders[K] extends ConfigProvider<infer A>\n    ? A\n    : CaptchaProviders[K]\n}\n\n/**\n * Define config for the captcha\n */\nexport function defineConfig<\nCaptchaProviders extends Record<\n    string,\n    CaptchaManagerFactory | ConfigProvider<CaptchaManagerFactory>\n  >,\n>(config: CaptchaProviders): ConfigProvider<ResolvedConfig<CaptchaProviders>> {\n  return configProvider.create(async (app) => {\n    const serviceNames = Object.keys(config)\n    const services = {} as Record<string, CaptchaManagerFactory>\n\n    for (let serviceName of serviceNames) {\n      const service = config[serviceName]\n      if (typeof service === 'function') {\n        services[serviceName] = service\n      } else {\n        services[serviceName] = await service.resolver(app)\n      }\n    }\n\n    return services as ResolvedConfig<CaptchaProviders>\n  })\n}\n\n/**\n * Helpers to configure captcha services\n */\nexport const services: {\n  turnstile: (config: TurnstileConfig) => ConfigProvider<(ctx: HttpContext) => TurnstileService>\n  recaptcha: (config: RecaptchaConfig) => ConfigProvider<(ctx: HttpContext) => RecaptchaService>\n} = {\n  turnstile(config) {\n    return configProvider.create(async () => {\n      const { TurnstileService } = await import('./captchas/turnstile.js')\n      return (ctx) => new TurnstileService(ctx, config)\n    })\n  },\n  recaptcha(config) {\n    return configProvider.create(async () => {\n      const { RecaptchaService } = await import('./captchas/recaptcha.js')\n      return (ctx) => new RecaptchaService(ctx, config)\n    })\n  }\n}\n"],"mappings":"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","names":["services"]}