{"version":3,"sources":["../src/captchas/recaptcha.ts"],"sourcesContent":["import got from 'got'\nimport { RecaptchaConfig, RecaptchaValidateResult } from '../types.js'\nimport { Captcha } from './captcha.js'\nimport { HttpContext } from '@adonisjs/core/http'\nimport * as errors from '../errors.js'\n\n/**\n * See more info about Google reCAPTCHA server-side validation: https://developers.google.com/recaptcha/docs/verify\n */\nexport class RecaptchaService extends Captcha {\n    protected verifyUrl = 'https://www.google.com/recaptcha/api/siteverify'\n\n    protected tokenParamName = 'token'\n\n    constructor(ctx: HttpContext, public config: RecaptchaConfig) {\n      super(ctx, config)\n    }\n\n    public async validate(): Promise<RecaptchaValidateResult> {\n        if (!this.hasToken()) {\n          throw new errors.E_CAPTCHA_MISSING_TOKEN([this.tokenParamName])\n        }\n        \n        console.log(this.config.secret)\n        const token = this.getToken()\n        const body = await got.post(\n          this.verifyUrl,\n          {\n            form: {\n              secret: this.config.secret,\n              response: token,\n            }\n          }\n        ).text()\n        const decodeBody = JSON.parse(body)\n\n        return {\n          success: Boolean(decodeBody.success),\n          challengeTimestamp: decodeBody.challenge_ts,\n          hostname: decodeBody.hostname,\n          errorCodes: decodeBody['error-codes'],\n        } as RecaptchaValidateResult\n    }\n}"],"mappings":";;;;;;;;AAAA,OAAO,SAAS;AAST,IAAM,mBAAN,cAA+B,QAAQ;AAAA,EAK1C,YAAY,KAAyB,QAAyB;AAC5D,UAAM,KAAK,MAAM;AADkB;AAAA,EAErC;AAAA,EANU,YAAY;AAAA,EAEZ,iBAAiB;AAAA,EAM3B,MAAa,WAA6C;AACtD,QAAI,CAAC,KAAK,SAAS,GAAG;AACpB,YAAM,IAAW,wBAAwB,CAAC,KAAK,cAAc,CAAC;AAAA,IAChE;AAEA,YAAQ,IAAI,KAAK,OAAO,MAAM;AAC9B,UAAM,QAAQ,KAAK,SAAS;AAC5B,UAAM,OAAO,MAAM,IAAI;AAAA,MACrB,KAAK;AAAA,MACL;AAAA,QACE,MAAM;AAAA,UACJ,QAAQ,KAAK,OAAO;AAAA,UACpB,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,IACF,EAAE,KAAK;AACP,UAAM,aAAa,KAAK,MAAM,IAAI;AAElC,WAAO;AAAA,MACL,SAAS,QAAQ,WAAW,OAAO;AAAA,MACnC,oBAAoB,WAAW;AAAA,MAC/B,UAAU,WAAW;AAAA,MACrB,YAAY,WAAW,aAAa;AAAA,IACtC;AAAA,EACJ;AACJ;","names":[]}